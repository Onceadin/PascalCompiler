package parser2Tree;

import java.util.Vector;

public class MyTree {
	private class Node{
		public String item;
		Vector<Node> leafs = new Vector<Node>();
		
		public Node(String it){
			if(it.charAt(0) == '('){
				System.out.println(it);
				//получаем название текущей ноды
				int i = it.indexOf(' ');
				item = it.substring(1, i);
				it = it.substring(i+1, it.length());
				System.out.println(item);
				//делим оставшуюся строку на листья
				while(it.length() != 0){
					if (it.charAt(0) != '('){
						int t = it.indexOf(' ');
						if (t == -1){
							t = it.indexOf(')');
							if (t == -1){
								System.out.println(it);
							}							
						}
						addNewLeaf(it.substring(0, t));
						it = it.substring(t+1, it.length());
					}
					else{
						int c = 1;
						int j = 1;
						while(c != 0){
							if(it.charAt(j) == '(') c++;
							if(it.charAt(j) == ')') c--;
							j++;
						}
						addNewLeaf(it.substring(0, j));
						it = it.substring(j+1, it.length());
					}
				}
			}
			else{
				item = it;
				System.out.println(item);
			}
		}
		
		void addNewLeaf(String s){
			Node leaf = new Node(s);
			leafs.add(leaf);
		}
	}
	
	private Node root;
	public MyTree(String toParse) {
		root = new Node(toParse);
	}

	public void Output() {
		// TODO Auto-generated method stub
		
	}
}
